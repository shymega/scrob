name: CI workflow

on:
    workflow_dispatch:
    push:
    pull_request:

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                rust-channel:
                    - stable
                    - beta
                    - nightly

                cpu-target:
                    - x86_64-unknown-linux-musl
                    - x86_64-unknown-linux-gnu
                    - aarch64-unknown-linux-musl
                    - aarch64-unknown-linux-gnu
                    - x86_64-apple-darwin
                    - aarch64-apple-darwin
                    - armv7-unknown-linux-musleabi
                    - arm-unknown-linux-musleabihf
                    - armv7-unknown-linux-gnueabi
                    - armv7-unknown-linux-gnueabihf

        steps:
            - uses: actions/checkout@v3
            - name: Cache Rust assets
              id: rust-cache
              uses: Swatinem/rust-cache@v2
            - name: Configure Rust toolchain
              if: steps.rust-cache.outputs.cache-hit != 'true'
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.rust-channel }}
                  default: true
                  override: true
                  target: ${{ matrix.cpu-target }}
                  profile: minimal
            - name: Install Cross
              if: steps.rust-cache.outputs.cache-hit != 'true'
              uses: actions-rs/install@v0.1
              with:
                  crate: cross
                  version: latest
                  use-tool-cache: false
            - name: Build project in debug mode
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: >-
                      --all --locked --verbose  --target=${{ matrix.cpu-target }}
                  use-cross: true
            - name: Run tests on project
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: >-
                      --all --locked --verbose --target=${{ matrix.cpu-target }}
                  use-cross: true
